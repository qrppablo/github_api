{"version":3,"sources":["github_img.png","components/DataRender.js","apis/github.js","components/SearchForm.js","components/App.js","index.js"],"names":["module","exports","DataRender","checkData","user","props","data","Object","keys","length","message","className","href","html_url","login","src","avatar_url","alt","id","name","location","public_repos","followers","this","React","Component","axios","create","baseURL","SearchForm","state","componentDidUpdate","prevProps","prevState","a","response","github","get","setState","input","current","value","onFormSubmit","event","preventDefault","createRef","onSubmit","ref","type","placeholder","App","Helmet","charSet","require","ReactDOM","render","document","querySelector"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,wC,qJC+C5BC,E,4MA3CXC,UAAY,WAER,IAAMC,EAAO,EAAKC,MAAMD,KAAKE,KAE7B,OAAIC,OAAOC,KAAKJ,GAAMK,OAAS,IAAML,EAAKM,QAElC,kBAAC,WAAD,KACI,yBAAKC,UAAU,YACX,uBAAGC,KAAMR,EAAKS,SAAUF,UAAU,YAAYP,EAAKU,QAEvD,yBAAKH,UAAU,UACX,yBAAKI,IAAKX,EAAKY,WAAYC,IAAI,SAASN,UAAU,iBAEtD,yBAAKA,UAAU,QACX,wBAAIA,UAAU,YACV,0CAAYP,EAAKc,KACjB,4CAAcd,EAAKe,OACnB,gDAAkBf,EAAKgB,WACvB,oDAAsBhB,EAAKiB,eAC3B,iDAAmBjB,EAAKkB,cAGhC,8BAGDlB,EAAKM,QAER,kBAAC,WAAD,KACI,yBAAKC,UAAU,YAAf,kBAGA,8BAID,6BAAK,+B,uDAIhB,OAAQY,KAAKpB,gB,GAzCIqB,IAAMC,W,QCAhBC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,kCC0DIC,E,kDAxDX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IAIVyB,MAAQ,CAAE1B,KAAM,KAAME,KAAM,IALT,EAOnByB,mBAPmB,uCAOE,WAAOC,EAAWC,GAAlB,eAAAC,EAAA,2DAId3B,OAAOC,KAAK,EAAKsB,MAAM1B,MAAMK,OAAS,GAJxB,oBAKRwB,EAAU7B,OAAS,EAAK0B,MAAM1B,KALtB,wBAML+B,EAAW,GANN,kBAQYC,EAAOC,IAAP,WAAe,EAAKP,MAAM1B,OARtC,OAQL+B,EARK,OASL,EAAKG,SAAS,CAAEhC,KAAM6B,EAAS7B,OAT1B,kDAWL6B,EAAW,CAAE7B,KAAK,EAAD,IACjB,EAAKgC,SAAS,CAAEhC,KAAM6B,EAAS7B,OAZ1B,QAeb,EAAKiC,MAAMC,QAAQC,MAAQ,GAfd,0DAPF,0DA0BnBC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKN,SAAS,CAAElC,KAAM,EAAKmC,MAAMC,QAAQC,SA1BzC,EAAKF,MAAQf,IAAMqB,YAFJ,E,qDAgCf,OACI,kBAAC,WAAD,KACI,0BAAMC,SAAUvB,KAAKmB,aAAc/B,UAAU,QACzC,yBAAKA,UAAU,eACf,2BACIoC,IAAKxB,KAAKgB,MACVS,KAAK,OACLrC,UAAU,mBACVsC,YAAY,sBAGhB,yBAAKtC,UAAU,aACf,2BACIqC,KAAK,SACLrC,UAAU,uBAIlB,kBAAC,EAAD,CAAYP,KAAMmB,KAAKO,a,GAnDdN,IAAMC,W,QCkBhByB,E,uKAfP,OACI,yBAAKvC,UAAU,WACX,kBAACwC,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,gDAEJ,yBAAKzC,UAAU,QACX,yBAAKA,UAAU,YAAYI,IAAKsC,EAAQ,IAAsBpC,IAAI,iBAEtE,kBAAC,EAAD,W,GAZEO,IAAMC,W,MCCxB6B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.4db85958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_img.7024fe93.png\";","import React, { Fragment } from 'react';\n\nclass DataRender extends React.Component {\n\n    checkData = () => {\n\n        const user = this.props.user.data;\n\n        if (Object.keys(user).length > 0 && !user.message) {\n            return (\n                <Fragment>\n                    <div className=\"username\">\n                        <a href={user.html_url} className=\"username\">{user.login}</a>\n                    </div>    \n                    <div className=\"avatar\">\n                        <img src={user.avatar_url} alt=\"Avatar\" className=\"avatar--img\" />\n                    </div>\n                    <div className=\"list\">\n                        <ul className=\"list__ul\">\n                            <li>{`ID: ${user.id}`}</li>\n                            <li>{`Name: ${user.name}`}</li>\n                            <li>{`Location: ${user.location}`}</li>\n                            <li>{`Public repos: ${user.public_repos}`}</li>\n                            <li>{`Followers: ${user.followers}`}</li>\n                        </ul>\n                    </div>\n                    <br />\n                </Fragment>\n            );\n        } else if (user.message) {\n            return (\n                <Fragment>\n                    <div className=\"username\">\n                    User not found\n                    </div>\n                    <br />\n                </Fragment>\n            );\n        } \n            return <div><br /></div>;\n        }\n\n    render(){\n        return (this.checkData());\n    }\n}\n                \nexport default DataRender;","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.github.com/users/\",\n});\n","import React, { Fragment } from 'react';\nimport DataRender from './DataRender';\nimport github from '../apis/github';\n\nclass SearchForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.input = React.createRef();\n    }\n    \n    state = { user: null, data: {} };\n\n    componentDidUpdate = async (prevProps, prevState) => {\n\n        // Si el state.user tiene 0 keys es porque el input \n        // estÃ¡ vacio, de esta manera no se llama a la api.\n        if(Object.keys(this.state.user).length > 0){\n            if  (prevState.user !== this.state.user ){\n                let response = {};\n                try {\n                    response = await github.get(`/${this.state.user}`);\n                    this.setState({ data: response.data });\n                } catch(err) { \n                    response = { data: err };\n                    this.setState({ data: response.data });\n                }\n            }\n            this.input.current.value = '';\n        }\n    };\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ user: this.input.current.value });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <form onSubmit={this.onFormSubmit} className=\"form\">\n                    <div className=\"form__input\">\n                    <input \n                        ref={this.input}\n                        type=\"text\"\n                        className=\"form__input--txt\"\n                        placeholder=\"Type username...\"\n                    />\n                    </div>\n                    <div className=\"form__btn\">\n                    <input\n                        type=\"submit\"\n                        className=\"form__input--btn\"\n                    />\n                    </div>\n                </form>\n                <DataRender user={this.state} />\n            </Fragment>\n        );\n    }\n}\n\nexport default SearchForm;","import React from 'react';\nimport SearchForm from '../components/SearchForm';\nimport {Helmet} from \"react-helmet\";\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>GitHub Users</title>\n                </Helmet>\n                <div className=\"logo\">\n                    <img className=\"logo--img\" src={require(\"../github_img.png\")} alt=\"GitHub logo\" />\n                </div>\n                <SearchForm />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}